
terraform providers
.
â””â”€â”€ provider.simple-datasource


terraform init

[0m[1mInitializing the backend...[0m

[0m[1mInitializing provider plugins...[0m

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
test ! -f /terraform-provider-pyrraform-test.log

terraform providers schema -json | python -m json.tool
{
    "format_version": "0.1",
    "provider_schemas": {
        "simple-datasource": {
            "provider": {
                "version": 0,
                "block": {}
            },
            "data_source_schemas": {
                "simple-datasource_answer": {
                    "version": 0,
                    "block": {
                        "attributes": {
                            "value": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        }
    }
}
sed "s/^........-......\....://" /terraform-provider-pyrraform-test.log
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
rm /terraform-provider-pyrraform-test.log
test ! -f terraform.tfstate

terraform plan
[0m[1mRefreshing Terraform state in-memory prior to plan...[0m
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.
[0m
[0m[1mdata.simple-datasource_answer.answer: Refreshing state...[0m

------------------------------------------------------------------------

[0m[1m[32mNo changes. Infrastructure is up-to-date.[0m[32m

This means that Terraform did not detect any differences between your
configuration and real physical resources that exist. As a result, no
actions need to be performed.[0m
sed "s/^........-......\....://" /terraform-provider-pyrraform-test.log
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:PrepareProviderConfig: config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:ValidateDataSourceConfig: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Configure: terraform_version: "0.12.29"
config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:ValidateDataSourceConfig: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:ReadDataSource: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Configure: terraform_version: "0.12.29"
config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
rm /terraform-provider-pyrraform-test.log
test ! -f terraform.tfstate

terraform apply
[0m[1mdata.simple-datasource_answer.answer: Refreshing state...[0m
[0m[1m[32m
Apply complete! Resources: 0 added, 0 changed, 0 destroyed.[0m
[0m[1m[32m
Outputs:

answer = 42[0m
sed "s/^........-......\....://" /terraform-provider-pyrraform-test.log
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:PrepareProviderConfig: config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:ValidateDataSourceConfig: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Configure: terraform_version: "0.12.29"
config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:ValidateDataSourceConfig: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:ReadDataSource: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Configure: terraform_version: "0.12.29"
config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Configure: terraform_version: "0.12.29"
config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
rm /terraform-provider-pyrraform-test.log
grep -v "lineage" terraform.tfstate
{
  "version": 4,
  "terraform_version": "0.12.29",
  "serial": 1,
  "outputs": {
    "answer": {
      "value": 42,
      "type": "number"
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "simple-datasource_answer",
      "name": "answer",
      "provider": "provider.simple-datasource",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "value": 42
          }
        }
      ]
    }
  ]
}

terraform destroy -auto-approve
[0m[1mdata.simple-datasource_answer.answer: Refreshing state...[0m
[0m[1m[32m
Destroy complete! Resources: 0 destroyed.[0m
sed "s/^........-......\....://" /terraform-provider-pyrraform-test.log
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:PrepareProviderConfig: config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:ValidateDataSourceConfig: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Configure: terraform_version: "0.12.29"
config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:ValidateDataSourceConfig: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:ReadDataSource: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Configure: terraform_version: "0.12.29"
config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
rm /terraform-provider-pyrraform-test.log
grep -v "lineage" terraform.tfstate
{
  "version": 4,
  "terraform_version": "0.12.29",
  "serial": 3,
  "outputs": {},
  "resources": []
}

terraform plan
[0m[1mRefreshing Terraform state in-memory prior to plan...[0m
The refreshed state will be used to calculate this plan, but will not be
persisted to local or remote state storage.
[0m
[0m[1mdata.simple-datasource_answer.answer: Refreshing state...[0m

------------------------------------------------------------------------

[0m[1m[32mNo changes. Infrastructure is up-to-date.[0m[32m

This means that Terraform did not detect any differences between your
configuration and real physical resources that exist. As a result, no
actions need to be performed.[0m
sed "s/^........-......\....://" /terraform-provider-pyrraform-test.log
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:PrepareProviderConfig: config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:ValidateDataSourceConfig: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Configure: terraform_version: "0.12.29"
config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:ValidateDataSourceConfig: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:ReadDataSource: type_name: "simple-datasource_answer"
config {
  msgpack: "\201\245value\300"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Configure: terraform_version: "0.12.29"
config {
  msgpack: "\200"
}

INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
rm /terraform-provider-pyrraform-test.log
grep -v "lineage" terraform.tfstate
{
  "version": 4,
  "terraform_version": "0.12.29",
  "serial": 3,
  "outputs": {},
  "resources": []
}
