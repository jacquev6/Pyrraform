
terraform providers
.
â””â”€â”€ provider.simple-datasource


terraform init

[0m[1mInitializing the backend...[0m

[0m[1mInitializing provider plugins...[0m

[0m[1m[32mTerraform has been successfully initialized![0m[32m[0m
[0m[32m
You may now begin working with Terraform. Try running "terraform plan" to see
any changes that are required for your infrastructure. All Terraform commands
should now work.

If you ever set or change modules or backend configuration for Terraform,
rerun this command to reinitialize your working directory. If you forget, other
commands will detect it and remind you to do so if necessary.[0m
test ! -f /terraform-provider-pyrraform-test.log

terraform providers schema -json | python -m json.tool
{
    "format_version": "0.1",
    "provider_schemas": {
        "simple-datasource": {
            "provider": {
                "version": 0,
                "block": {}
            },
            "data_source_schemas": {
                "simple-datasource_answer": {
                    "version": 0,
                    "block": {
                        "attributes": {
                            "value": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        }
    }
}
sed "s/^........-......\....://" /terraform-provider-pyrraform-test.log
INFO:Pyrraform.test_provider:Enter main with command-line ['/usr/local/bin/terraform-provider-simple-datasource']
INFO:Pyrraform.test_provider:Server started
INFO:Pyrraform.test_provider:GetSchema
INFO:Pyrraform.test_provider:Shutdown
INFO:Pyrraform.test_provider:Exit main
rm /terraform-provider-pyrraform-test.log
test ! -f terraform.tfstate

terraform plan
[31m
[1m[31mError: [0m[0m[1mUnsupported argument[0m

[0m  on main.tf line 4, in data "simple-datasource_answer" "answer":
   4:     [4munexpected[0m = 42
[0m
An argument named "unexpected" is not expected here.
[0m[0m
