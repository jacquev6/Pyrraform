#!/usr/bin/env python3

import Pyrraform
from Pyrraform import tfplugin5_0_pb2


class DumpConfigsDataSource(Pyrraform.DataSource):
    config_schema = Pyrraform.Schema(
        version=0,
        block=Pyrraform.schema.Block(
            version=0,
            attributes=[
                Pyrraform.schema.Attribute(
                    name="datasource_attribute_number",
                    type=Pyrraform.Number,
                    description="",
                    required=False,
                    optional=False,
                    computed=False,
                    sensitive=False,
                ),
                Pyrraform.schema.Attribute(
                    name="datasource_attribute_string",
                    type=Pyrraform.String,
                    description="",
                    required=False,
                    optional=False,
                    computed=False,
                    sensitive=False,
                ),
                Pyrraform.schema.Attribute(
                    name="datasource_attribute_boolean",
                    type=Pyrraform.Boolean,
                    description="",
                    required=False,
                    optional=False,
                    computed=False,
                    sensitive=False,
                ),
                Pyrraform.schema.Attribute(
                    name="datasource_attribute_number_list",
                    type=Pyrraform.List(Pyrraform.Number),
                    description="",
                    required=False,
                    optional=False,
                    computed=False,
                    sensitive=False,
                ),
                Pyrraform.schema.Attribute(
                    name="datasource_attribute_string_list_list",
                    type=Pyrraform.List(Pyrraform.List(Pyrraform.String)),
                    description="",
                    required=False,
                    optional=False,
                    computed=False,
                    sensitive=False,
                ),
                Pyrraform.schema.Attribute(
                    name="datasource_attribute_object",
                    type=Pyrraform.Object(a=Pyrraform.Number),
                    description="",
                    required=False,
                    optional=False,
                    computed=False,
                    sensitive=False,
                ),

                Pyrraform.schema.Attribute(
                    name="datasource_attribute_string_required",
                    type=Pyrraform.String,
                    required=True,
                    description="",
                    optional=False,
                    computed=False,
                    sensitive=False,
                ),

                Pyrraform.schema.Attribute(
                    name="provider",
                    type=Pyrraform.String,
                    computed=True,
                    description="",
                    required=False,
                    optional=False,
                    sensitive=False,
                ),
                Pyrraform.schema.Attribute(
                    name="datasource",
                    type=Pyrraform.String,
                    computed=True,
                    description="",
                    required=False,
                    optional=False,
                    sensitive=False,
                ),
            ],
            block_types=[
                Pyrraform.schema.NestedBlock(
                    type_name="datasource_block_single_optional",
                    block=Pyrraform.schema.Block(
                        version=0,
                        attributes=[
                            Pyrraform.schema.Attribute(
                                name="block_attribute",
                                type=Pyrraform.String,
                                description="",
                                required=False,
                                optional=False,
                                computed=False,
                                sensitive=False,
                            ),
                        ],
                        block_types=[],
                    ),
                    nesting=Pyrraform.schema.NestingMode.SINGLE,
                    min_items=0,
                    max_items=0,
                ),
                Pyrraform.schema.NestedBlock(
                    type_name="datasource_block_single_required",
                    block=Pyrraform.schema.Block(
                        version=0,
                        attributes=[
                            Pyrraform.schema.Attribute(
                                name="block_attribute",
                                type=Pyrraform.String,
                                description="",
                                required=False,
                                optional=False,
                                computed=False,
                                sensitive=False,
                            ),
                        ],
                        block_types=[],
                    ),
                    nesting=Pyrraform.schema.NestingMode.SINGLE,
                    min_items=1,  # Any other value is interpreted as 0, i.e. optional block
                    max_items=0,  # ignored
                ),

                # @todo Explore Pyrraform.schema.NestingMode.GROUP

                Pyrraform.schema.NestedBlock(
                    type_name="datasource_block_list",
                    block=Pyrraform.schema.Block(
                        version=0,
                        attributes=[
                            Pyrraform.schema.Attribute(
                                name="block_attribute",
                                type=Pyrraform.String,
                                description="",
                                required=False,
                                optional=False,
                                computed=False,
                                sensitive=False,
                            ),
                        ],
                        block_types=[],
                    ),
                    nesting=Pyrraform.schema.NestingMode.LIST,
                    min_items=0,
                    max_items=0,
                ),

                Pyrraform.schema.NestedBlock(
                    type_name="datasource_block_set",
                    block=Pyrraform.schema.Block(
                        version=0,
                        attributes=[
                            Pyrraform.schema.Attribute(
                                name="block_attribute",
                                type=Pyrraform.String,
                                description="",
                                required=False,
                                optional=False,
                                computed=False,
                                sensitive=False,
                            ),
                        ],
                        block_types=[],
                    ),
                    nesting=Pyrraform.schema.NestingMode.SET,
                    min_items=0,
                    max_items=0,
                ),

                Pyrraform.schema.NestedBlock(
                    type_name="datasource_block_map",
                    block=Pyrraform.schema.Block(
                        version=0,
                        attributes=[
                            Pyrraform.schema.Attribute(
                                name="block_attribute",
                                type=Pyrraform.String,
                                description="",
                                required=False,
                                optional=False,
                                computed=False,
                                sensitive=False,
                            ),
                        ],
                        block_types=[],
                    ),
                    nesting=Pyrraform.schema.NestingMode.MAP,
                    min_items=0,
                    max_items=0,
                ),
            ],
        )
    )

    def read(self):
        ret = dict(self._config)
        # @todo Move this update in the framework
        ret.update({
            "provider": str(self._provider._config),
            "datasource": str(self._config),
        })
        return ret


class ConfiguredProvider(Pyrraform.Provider):
    config_schema = Pyrraform.Schema(
        version=0,
        block=Pyrraform.schema.Block(
            version=0,
            attributes=[
                Pyrraform.schema.Attribute(
                    name="provider_attribute_number",
                    type=Pyrraform.Number,
                    description="",
                    required=False,
                    optional=True,
                    computed=False,
                    sensitive=False,
                ),
                Pyrraform.schema.Attribute(
                    name="provider_attribute_string",
                    type=Pyrraform.String,
                    description="",
                    required=False,
                    optional=True,
                    computed=False,
                    sensitive=False,
                ),
                Pyrraform.schema.Attribute(
                    name="provider_attribute_boolean",
                    type=Pyrraform.Boolean,
                    description="",
                    required=False,
                    optional=True,
                    computed=False,
                    sensitive=False,
                ),
            ],
            block_types=[],
        )
    )

    data_source_classes = {
        "dump-configs": DumpConfigsDataSource,
    }


if __name__ == "__main__":
    Pyrraform.run_provider(ConfiguredProvider)
